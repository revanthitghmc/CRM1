
---

## 🖼️ Sample UI Components (Code Snippets)

### `frontend/components/DocumentUploader.jsx`
```jsx
import { useState } from 'react';

export default function DocumentUploader({ categories, studentId }) {
  const [files, setFiles] = useState({});
  const [uploading, setUploading] = useState({});

  const handleUpload = async (category, file) => {
    const formData = new FormData();
    formData.append('file', file);
    formData.append('category', category);
    formData.append('studentId', studentId);

    setUploading(prev => ({ ...prev, [category]: true }));

    const res = await fetch('/api/documents/upload', {
      method: 'POST',
      body: formData
    });

    setUploading(prev => ({ ...prev, [category]: false }));

    if (res.ok) {
      const data = await res.json();
      setFiles(prev => ({ ...prev, [category]: data }));
    } else {
      alert(`Upload failed for ${category}`);
    }
  };

  return (
    <div className="space-y-4">
      {categories.map(cat => (
        <div key={cat.id} className="border rounded-lg p-4 bg-white">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            {cat.label}
          </label>
          {files[cat.id] ? (
            <div className="flex items-center justify-between bg-gray-50 p-2 rounded text-sm">
              <span>{files[cat.id].fileName}</span>
              <button className="text-red-500 text-xs">✕</button>
            </div>
          ) : (
            <FileInput
              disabled={uploading[cat.id]}
              onChange={(e) => handleUpload(cat.id, e.target.files[0])}
            />
          )}
          {uploading[cat.id] && <Progress />}
        </div>
      ))}
    </div>
  );
}